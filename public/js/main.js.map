{"version":3,"sources":["app/app.module.js","app/app.routes.js","app/components/document/documentController.js","app/components/document/documentService.js","app/components/documents/documentsController.js","app/components/node/nodeController.js","app/components/node/nodeService.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"main.js","sourcesContent":["/** CV App Module */\n\nvar cvApp = angular.module('cvApp', ['ui.router']);\n\ncvApp.config(function($interpolateProvider) {\n    $interpolateProvider.startSymbol('[[');\n    $interpolateProvider.endSymbol(']]');\n});\n","/** Angular UI Routing Config */\n\ncvApp.config( function($stateProvider, $urlRouterProvider) {\n    $stateProvider\n        .state('document', {\n            url: '/',\n            controller: 'DocumentsController',\n            controllerAs : 'documentsCtrl',\n            templateUrl: 'documents/documents.html',\n            resolve: {\n                documents: function(DocumentService, documentsData){\n                    var documentResult = [];\n                    var documentsDataData = documentsData.data;\n                    for(documentName in documentsDataData){\n                        documentResult.push({\n                            name: documentName,\n                            data: documentsDataData[documentName]\n                        });\n                    }\n                    return documentResult;\n                },\n                documentsData: function(DocumentService){\n                    return DocumentService.getDocuments();\n                }\n            }\n        })\n        .state('document.new', {\n            url: 'new',\n            templateUrl: 'document/document-new.html',\n            controller: 'DocumentController',\n            controllerAs : 'documentCtrl',\n            resolve: {\n                document: function(){\n                    return {\n                        name: '',\n                        data: ''\n                    };\n                }\n            }\n        })\n        .state('document.view', {\n            url: ':document_name',\n            templateUrl: 'document/document-view.html',\n            controller: 'DocumentController',\n            controllerAs : 'documentCtrl',\n            resolve: {\n                document: function($stateParams, DocumentService, documentData){\n                    return {\n                        name: $stateParams.document_name,\n                        data: documentData.data\n                    };\n                },\n                documentData: function($stateParams, DocumentService){\n                    return DocumentService.getDocument($stateParams.document_name);\n                }\n            }\n        })\n        .state('.node', {\n            url: ':document_name/:path',\n            controller: 'NodeController',\n            controllerAs: 'nodeCtrl',\n            templateUrl: 'node/node.html'\n        });\n\n    $urlRouterProvider.otherwise(\"/\");\n});\n","/** Document Controller */\n\ncvApp.controller('DocumentController', ['DocumentService', 'document', '$state',  function(DocumentService, document, $state){\n    var documentCtrl = this;\n\n    this.document = document;\n\n    /**\n     * Create a document with the given name\n     *\n     * @param documentName\n     */\n    this.createDocument = function() {\n        var documentName = documentCtrl.document.name;\n        var documentData = documentCtrl.document.data;\n        DocumentService.createDocument(documentName, documentData).success(function(data){\n            documentCtrl.document = {\n                name: '',\n                data: ''\n            };\n        }).success(\n            function(){\n                $state.go('document', {}, {\n                    reload: true\n                });\n            }\n        );\n\n    }\n\n}]);\n","/**\n * Service to provide Document Data\n */\n\ncvApp.service('DocumentService', ['$http', function($http) {\n\n    this.getDocuments = function () {\n        return $http.get('/api');\n    }\n\n    this.getDocument = function (documentName) {\n        return $http.get('/api/' + documentName);\n    }\n\n    this.createDocument = function (documentName, documentData) {\n        return $http.put('/api/' + documentName, documentData);\n    }\n}]);\n\n","/** Documents Controller */\n\ncvApp.controller('DocumentsController', ['documents',  function(documents){\n    var documentsCtrl = this;\n\n    this.documents = documents;\n\n}]);\n","/** Node Controller */\n\ncvApp.controller('NodeController', ['NodeData', function(NodeData){\n    var nodeCtrl = this;\n\n}]);\n","/**\n * Service to provide Node Data\n */\n\ncvApp.service('NodeService', function($http) {\n    this.getNode = function (documentName, nodePath) {\n        return $http.get('/api/' + document_name + '/' + nodePath);\n    }\n});\n"],"sourceRoot":"/source/"}